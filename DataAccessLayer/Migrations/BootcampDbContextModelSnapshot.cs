// <auto-generated />
using System;
using DataAccessLayer.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(BootcampDbContext))]
    partial class BootcampDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Avva"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Loft"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pegasus"
                        });
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Dress Category",
                            Name = "Dress"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tshirt Category",
                            Name = "Tshirt",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Pants Category",
                            Name = "Pants",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Shoe Category",
                            Name = "Shoe"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Sneakers Category",
                            Name = "Sneakers",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 6,
                            Description = "Slipper Category",
                            Name = "Slipper",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 7,
                            Description = "Sandals Category",
                            Name = "Sandals",
                            ParentCategoryId = 4
                        },
                        new
                        {
                            Id = 8,
                            Description = "Book Category",
                            Name = "Book"
                        },
                        new
                        {
                            Id = 9,
                            Description = "History Category",
                            Name = "History",
                            ParentCategoryId = 8
                        },
                        new
                        {
                            Id = 10,
                            Description = "Economy Category",
                            Name = "Economy",
                            ParentCategoryId = 8
                        },
                        new
                        {
                            Id = 11,
                            Description = "Programming Category",
                            Name = "Programming",
                            ParentCategoryId = 8
                        },
                        new
                        {
                            Id = 12,
                            Description = "Jean Category",
                            Name = "Jean",
                            ParentCategoryId = 3
                        });
                });

            modelBuilder.Entity("Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 4,
                            Name = "NavyBlue"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pink"
                        });
                });

            modelBuilder.Entity("Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Boy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Girl"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Unisex"
                        });
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("GenderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 2,
                            ColorId = 4,
                            GenderId = 1,
                            Name = "Basic Tshirt"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 5,
                            CategoryId = 5,
                            ColorId = 1,
                            GenderId = 5,
                            Name = "Star Runner 3 Sneakers"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 12,
                            ColorId = 1,
                            GenderId = 2,
                            Name = "Women Pants"
                        });
                });

            modelBuilder.Entity("Entities.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsContinue")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsContinue = true,
                            ProductId = 1,
                            SizeId = 2,
                            UnitPrice = 100m,
                            UnitsInStock = 10
                        },
                        new
                        {
                            Id = 2,
                            IsContinue = true,
                            ProductId = 1,
                            SizeId = 3,
                            UnitPrice = 100m,
                            UnitsInStock = 5
                        },
                        new
                        {
                            Id = 3,
                            IsContinue = true,
                            ProductId = 1,
                            SizeId = 4,
                            UnitPrice = 100m,
                            UnitsInStock = 3
                        },
                        new
                        {
                            Id = 4,
                            IsContinue = true,
                            ProductId = 2,
                            SizeId = 13,
                            UnitPrice = 790m,
                            UnitsInStock = 50
                        },
                        new
                        {
                            Id = 5,
                            IsContinue = true,
                            ProductId = 2,
                            SizeId = 14,
                            UnitPrice = 750m,
                            UnitsInStock = 5
                        },
                        new
                        {
                            Id = 6,
                            IsContinue = true,
                            ProductId = 3,
                            SizeId = 18,
                            UnitPrice = 299.95m,
                            UnitsInStock = 20
                        },
                        new
                        {
                            Id = 7,
                            IsContinue = true,
                            ProductId = 3,
                            SizeId = 19,
                            UnitPrice = 299.95m,
                            UnitsInStock = 18
                        });
                });

            modelBuilder.Entity("Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Xs"
                        },
                        new
                        {
                            Id = 2,
                            Name = "S"
                        },
                        new
                        {
                            Id = 3,
                            Name = "M"
                        },
                        new
                        {
                            Id = 4,
                            Name = "L"
                        },
                        new
                        {
                            Id = 5,
                            Name = "XL"
                        },
                        new
                        {
                            Id = 6,
                            Name = "XXL"
                        },
                        new
                        {
                            Id = 7,
                            Name = "37"
                        },
                        new
                        {
                            Id = 8,
                            Name = "38"
                        },
                        new
                        {
                            Id = 9,
                            Name = "39"
                        },
                        new
                        {
                            Id = 10,
                            Name = "40"
                        },
                        new
                        {
                            Id = 11,
                            Name = "41"
                        },
                        new
                        {
                            Id = 12,
                            Name = "42"
                        },
                        new
                        {
                            Id = 13,
                            Name = "43"
                        },
                        new
                        {
                            Id = 14,
                            Name = "44"
                        },
                        new
                        {
                            Id = 15,
                            Name = "45"
                        },
                        new
                        {
                            Id = 16,
                            Name = "25/27"
                        },
                        new
                        {
                            Id = 17,
                            Name = "26/27"
                        },
                        new
                        {
                            Id = 18,
                            Name = "27/27"
                        },
                        new
                        {
                            Id = 19,
                            Name = "27/29"
                        });
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.HasOne("Entities.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.HasOne("Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Gender", "Gender")
                        .WithMany("Products")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Entities.ProductDetail", b =>
                {
                    b.HasOne("Entities.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Size", "Size")
                        .WithMany("ProductDetails")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Gender", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("Entities.Size", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
